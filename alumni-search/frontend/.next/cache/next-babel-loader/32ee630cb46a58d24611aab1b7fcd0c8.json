{"ast":null,"code":"\"use strict\";\n\nvar _bluebird = _interopRequireDefault(require(\"bluebird\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nrequire(\"isomorphic-fetch\");\n\nfunction getLoginInfo(user_info) {\n  const header = {\n    'Accept': \"application/json\",\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\n  };\n  const searchParams = new URLSearchParams(user_info);\n  return fetch(\"http://localhost:8080/login\", {\n    method: \"POST\",\n    headers: header,\n    body: searchParams\n  }).then(function (resp) {\n    return resp.json();\n  });\n}\n\nfunction getRegisterInfo(user_info) {\n  const header = {\n    'Accept': \"application/json\",\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\n  };\n  const searchParams = new URLSearchParams(user_info);\n  return fetch(\"http://localhost:8080/create\", {\n    method: \"POST\",\n    headers: header,\n    body: searchParams\n  }).then(function (resp) {\n    return resp.json();\n  });\n}\n\nfunction getSearchInInfo(searchTerm) {\n  return fetch(`http://localhost:8080/search?searchTerm=${searchTerm}`).then(function (resp) {\n    console.log(searchTerm);\n    return resp.json();\n  });\n}\n\nasync function checkLogin(userpw) {\n  console.log(userpw); //{username: , password: }\n\n  const info = await getLoginInfo(userpw);\n  console.log(info); //{status: , screenname: }\n\n  console.log(info.status);\n}\n\nfunction handleError(error) {\n  console.warn(error);\n  return null;\n}\n\nmodule.exports = {\n  createAccount: function (user_info) {\n    console.log(user_info);\n    return getRegisterInfo(user_info).catch(handleError);\n  },\n  getLogin: function (user_info) {\n    return getLoginInfo(user_info).catch(handleError);\n  },\n  getLoggedInfo: function (community_info) {\n    return getSearchInInfo(community_info).catch(handleError);\n  },\n  getScreenname: function (user_info) {\n    console.log(user_info);\n    return getRegisterInfo(user_info).catch(handleError);\n  }\n};","map":{"version":3,"sources":["/home/jp/AlumniDB/alumni-search/frontend/lib/utils.js"],"names":["require","getLoginInfo","user_info","header","searchParams","URLSearchParams","fetch","method","headers","body","then","resp","json","getRegisterInfo","getSearchInInfo","searchTerm","console","log","checkLogin","userpw","info","status","handleError","error","warn","module","exports","createAccount","catch","getLogin","getLoggedInfo","community_info","getScreenname"],"mappings":";;AACA;;;;AADAA,OAAO,CAAC,kBAAD,CAAP;;AAGA,SAASC,YAAT,CAAsBC,SAAtB,EAAiC;AAC/B,QAAMC,MAAM,GAAG;AAAC,cAAW,kBAAZ;AACC,oBAAgB;AADjB,GAAf;AAEA,QAAMC,YAAY,GAAG,IAAIC,eAAJ,CAAoBH,SAApB,CAArB;AACA,SAAOI,KAAK,CAAC,6BAAD,EACZ;AAAEC,IAAAA,MAAM,EAAE,MAAV;AACEC,IAAAA,OAAO,EAAEL,MADX;AAEEM,IAAAA,IAAI,EAAEL;AAFR,GADY,CAAL,CAGgBM,IAHhB,CAGqB,UAAUC,IAAV,EAAe;AACvC,WAAOA,IAAI,CAACC,IAAL,EAAP;AACD,GALI,CAAP;AAMD;;AAED,SAASC,eAAT,CAAyBX,SAAzB,EAAoC;AAClC,QAAMC,MAAM,GAAG;AAAC,cAAW,kBAAZ;AACC,oBAAgB;AADjB,GAAf;AAEA,QAAMC,YAAY,GAAG,IAAIC,eAAJ,CAAoBH,SAApB,CAArB;AACA,SAAOI,KAAK,CAAC,8BAAD,EACZ;AAAEC,IAAAA,MAAM,EAAE,MAAV;AACEC,IAAAA,OAAO,EAAEL,MADX;AAEEM,IAAAA,IAAI,EAAEL;AAFR,GADY,CAAL,CAGgBM,IAHhB,CAGqB,UAAUC,IAAV,EAAe;AACvC,WAAOA,IAAI,CAACC,IAAL,EAAP;AACD,GALI,CAAP;AAMD;;AAGD,SAASE,eAAT,CAAyBC,UAAzB,EAAoC;AAClC,SAAOT,KAAK,CAAE,2CAA0CS,UAAW,EAAvD,CAAL,CAA+DL,IAA/D,CAAoE,UAASC,IAAT,EAAc;AACrFK,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,WAAOJ,IAAI,CAACC,IAAL,EAAP;AACD,GAHI,CAAP;AAKD;;AAED,eAAeM,UAAf,CAA0BC,MAA1B,EAAiC;AAC/BH,EAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ,EAD+B,CACX;;AACpB,QAAMC,IAAI,GAAG,MAAMnB,YAAY,CAACkB,MAAD,CAA/B;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ,EAH+B,CAGb;;AAClBJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACC,MAAjB;AACD;;AAED,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1BP,EAAAA,OAAO,CAACQ,IAAR,CAAaD,KAAb;AACA,SAAO,IAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,aAAa,EAAE,UAAUzB,SAAV,EAAqB;AAClCc,IAAAA,OAAO,CAACC,GAAR,CAAYf,SAAZ;AACA,WAAOW,eAAe,CAACX,SAAD,CAAf,CAA2B0B,KAA3B,CAAiCN,WAAjC,CAAP;AACD,GAJc;AAKfO,EAAAA,QAAQ,EAAE,UAAU3B,SAAV,EAAqB;AAC7B,WAAOD,YAAY,CAACC,SAAD,CAAZ,CAAwB0B,KAAxB,CAA8BN,WAA9B,CAAP;AACD,GAPc;AAQfQ,EAAAA,aAAa,EAAE,UAASC,cAAT,EAAwB;AACrC,WAAOjB,eAAe,CAACiB,cAAD,CAAf,CAAgCH,KAAhC,CAAsCN,WAAtC,CAAP;AACD,GAVc;AAWfU,EAAAA,aAAa,EAAE,UAAU9B,SAAV,EAAqB;AAClCc,IAAAA,OAAO,CAACC,GAAR,CAAYf,SAAZ;AACA,WAAOW,eAAe,CAACX,SAAD,CAAf,CAA2B0B,KAA3B,CAAiCN,WAAjC,CAAP;AACD;AAdc,CAAjB","sourcesContent":["require(\"isomorphic-fetch\");\nimport BPromise from \"bluebird\";\n\nfunction getLoginInfo(user_info) {\n  const header = {'Accept' : \"application/json\",\n                  \"Content-Type\": \"application/x-www-form-urlencoded\"};\n  const searchParams = new URLSearchParams(user_info);\n  return fetch(\"http://localhost:8080/login\",\n  { method: \"POST\",\n    headers: header,\n    body: searchParams}).then(function (resp){\n      return resp.json();\n    }); \n}\n\nfunction getRegisterInfo(user_info) {\n  const header = {'Accept' : \"application/json\",\n                  \"Content-Type\": \"application/x-www-form-urlencoded\"};\n  const searchParams = new URLSearchParams(user_info);\n  return fetch(\"http://localhost:8080/create\",\n  { method: \"POST\",\n    headers: header,\n    body: searchParams}).then(function (resp){\n      return resp.json();\n    }); \n}\n\n\nfunction getSearchInInfo(searchTerm){\n  return fetch(`http://localhost:8080/search?searchTerm=${searchTerm}`).then(function(resp){\n      console.log(searchTerm);\n      return resp.json();\n    })\n\n}\n\nasync function checkLogin(userpw){\n  console.log(userpw);//{username: , password: }\n  const info = await getLoginInfo(userpw);\n  console.log(info);//{status: , screenname: }\n  console.log(info.status);\n}\n\nfunction handleError(error) {\n  console.warn(error);\n  return null;\n}\n\nmodule.exports = {\n  createAccount: function (user_info) {\n    console.log(user_info);\n    return getRegisterInfo(user_info).catch(handleError);\n  },\n  getLogin: function (user_info) {\n    return getLoginInfo(user_info).catch(handleError);\n  },\n  getLoggedInfo: function(community_info){\n    return getSearchInInfo(community_info).catch(handleError);\n  },\n  getScreenname: function (user_info) {\n    console.log(user_info);\n    return getRegisterInfo(user_info).catch(handleError);\n  },\n \n};\n\n"]},"metadata":{},"sourceType":"script"}