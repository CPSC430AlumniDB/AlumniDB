{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/asyncToGenerator\"));\n\nvar _bluebird = _interopRequireDefault(require(\"bluebird\"));\n\nrequire(\"isomorphic-fetch\");\n\nfunction getLoginInfo(user_info) {\n  var header = {\n    'Accept': \"application/json\",\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\n  };\n  var searchParams = new URLSearchParams(user_info);\n  return fetch(\"http://localhost:8080/login\", {\n    method: \"POST\",\n    headers: header,\n    body: searchParams\n  }).then(function (resp) {\n    return resp.json();\n  });\n}\n\nfunction getRegisterInfo(user_info) {\n  var header = {\n    'Accept': \"application/json\",\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\n  };\n  var searchParams = new URLSearchParams(user_info);\n  return fetch(\"http://localhost:8080/create\", {\n    method: \"POST\",\n    headers: header,\n    body: searchParams\n  }).then(function (resp) {\n    return resp.json();\n  });\n}\n\nfunction getCommunityNotLoggedInfo(searchTerm) {\n  return fetch(\"http://localhost:8080/search\").then(function (resp) {\n    console.log(name);\n    return resp.json();\n  });\n}\n\nfunction checkLogin(_x) {\n  return _checkLogin.apply(this, arguments);\n}\n\nfunction _checkLogin() {\n  _checkLogin = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(userpw) {\n    var info;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(userpw); //{username: , password: }\n\n            _context.next = 3;\n            return getLoginInfo(userpw);\n\n          case 3:\n            info = _context.sent;\n            console.log(info); //{status: , screenname: }\n\n            console.log(info.status);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _checkLogin.apply(this, arguments);\n}\n\nfunction handleError(error) {\n  console.warn(error);\n  return null;\n}\n\nmodule.exports = {\n  createAccount: function createAccount(user_info) {\n    console.log(user_info);\n    return getRegisterInfo(user_info)[\"catch\"](handleError);\n  },\n  getLogin: function getLogin(user_info) {\n    return getLoginInfo(user_info)[\"catch\"](handleError);\n  },\n  getLoggedInfo: function getLoggedInfo(community_info) {\n    return getCommunityLoggedInInfo(community_info)[\"catch\"](handleError);\n  },\n  getScreenname: function getScreenname(user_info) {\n    console.log(user_info);\n    return getRegisterInfo(user_info)[\"catch\"](handleError);\n  },\n  getNotLogged: function getNotLogged(community_info) {\n    return getCommunityNotLoggedInfo(community_info)[\"catch\"](handleError);\n  }\n};","map":{"version":3,"sources":["C:/Users/Brad/database-course/rudiments/alumni-search/frontend/lib/utils.js"],"names":["require","getLoginInfo","user_info","header","searchParams","URLSearchParams","fetch","method","headers","body","then","resp","json","getRegisterInfo","getCommunityNotLoggedInfo","searchTerm","console","log","name","checkLogin","userpw","info","status","handleError","error","warn","module","exports","createAccount","getLogin","getLoggedInfo","community_info","getCommunityLoggedInInfo","getScreenname","getNotLogged"],"mappings":";;;;;;;;AACA;;AADAA,OAAO,CAAC,kBAAD,CAAP;;AAGA,SAASC,YAAT,CAAsBC,SAAtB,EAAiC;AAC/B,MAAMC,MAAM,GAAG;AAAC,cAAW,kBAAZ;AACC,oBAAgB;AADjB,GAAf;AAEA,MAAMC,YAAY,GAAG,IAAIC,eAAJ,CAAoBH,SAApB,CAArB;AACA,SAAOI,KAAK,CAAC,6BAAD,EACZ;AAAEC,IAAAA,MAAM,EAAE,MAAV;AACEC,IAAAA,OAAO,EAAEL,MADX;AAEEM,IAAAA,IAAI,EAAEL;AAFR,GADY,CAAL,CAGgBM,IAHhB,CAGqB,UAAUC,IAAV,EAAe;AACvC,WAAOA,IAAI,CAACC,IAAL,EAAP;AACD,GALI,CAAP;AAMD;;AAED,SAASC,eAAT,CAAyBX,SAAzB,EAAoC;AAClC,MAAMC,MAAM,GAAG;AAAC,cAAW,kBAAZ;AACC,oBAAgB;AADjB,GAAf;AAEA,MAAMC,YAAY,GAAG,IAAIC,eAAJ,CAAoBH,SAApB,CAArB;AACA,SAAOI,KAAK,CAAC,8BAAD,EACZ;AAAEC,IAAAA,MAAM,EAAE,MAAV;AACEC,IAAAA,OAAO,EAAEL,MADX;AAEEM,IAAAA,IAAI,EAAEL;AAFR,GADY,CAAL,CAGgBM,IAHhB,CAGqB,UAAUC,IAAV,EAAe;AACvC,WAAOA,IAAI,CAACC,IAAL,EAAP;AACD,GALI,CAAP;AAMD;;AAGD,SAASE,yBAAT,CAAmCC,UAAnC,EAA8C;AAC5C,SAAOT,KAAK,gCAAL,CAAsCI,IAAtC,CAA2C,UAASC,IAAT,EAAc;AAC5DK,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACA,WAAOP,IAAI,CAACC,IAAL,EAAP;AACD,GAHI,CAAP;AAKD;;SAEcO,U;;;;;8FAAf,iBAA0BC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACEJ,YAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ,EADF,CACsB;;AADtB;AAAA,mBAEqBnB,YAAY,CAACmB,MAAD,CAFjC;;AAAA;AAEQC,YAAAA,IAFR;AAGEL,YAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ,EAHF,CAGoB;;AAClBL,YAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACC,MAAjB;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAOA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1BR,EAAAA,OAAO,CAACS,IAAR,CAAaD,KAAb;AACA,SAAO,IAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,aAAa,EAAE,uBAAU1B,SAAV,EAAqB;AAClCc,IAAAA,OAAO,CAACC,GAAR,CAAYf,SAAZ;AACA,WAAOW,eAAe,CAACX,SAAD,CAAf,UAAiCqB,WAAjC,CAAP;AACD,GAJc;AAKfM,EAAAA,QAAQ,EAAE,kBAAU3B,SAAV,EAAqB;AAC7B,WAAOD,YAAY,CAACC,SAAD,CAAZ,UAA8BqB,WAA9B,CAAP;AACD,GAPc;AAQfO,EAAAA,aAAa,EAAE,uBAASC,cAAT,EAAwB;AACrC,WAAOC,wBAAwB,CAACD,cAAD,CAAxB,UAA+CR,WAA/C,CAAP;AACD,GAVc;AAWfU,EAAAA,aAAa,EAAE,uBAAU/B,SAAV,EAAqB;AAClCc,IAAAA,OAAO,CAACC,GAAR,CAAYf,SAAZ;AACA,WAAOW,eAAe,CAACX,SAAD,CAAf,UAAiCqB,WAAjC,CAAP;AACD,GAdc;AAefW,EAAAA,YAAY,EAAE,sBAASH,cAAT,EAAwB;AACpC,WAAOjB,yBAAyB,CAACiB,cAAD,CAAzB,UAAgDR,WAAhD,CAAP;AACD;AAjBc,CAAjB","sourcesContent":["require(\"isomorphic-fetch\");\r\nimport BPromise from \"bluebird\";\r\n\r\nfunction getLoginInfo(user_info) {\r\n  const header = {'Accept' : \"application/json\",\r\n                  \"Content-Type\": \"application/x-www-form-urlencoded\"};\r\n  const searchParams = new URLSearchParams(user_info);\r\n  return fetch(\"http://localhost:8080/login\",\r\n  { method: \"POST\",\r\n    headers: header,\r\n    body: searchParams}).then(function (resp){\r\n      return resp.json();\r\n    }); \r\n}\r\n\r\nfunction getRegisterInfo(user_info) {\r\n  const header = {'Accept' : \"application/json\",\r\n                  \"Content-Type\": \"application/x-www-form-urlencoded\"};\r\n  const searchParams = new URLSearchParams(user_info);\r\n  return fetch(\"http://localhost:8080/create\",\r\n  { method: \"POST\",\r\n    headers: header,\r\n    body: searchParams}).then(function (resp){\r\n      return resp.json();\r\n    }); \r\n}\r\n\r\n\r\nfunction getCommunityNotLoggedInfo(searchTerm){\r\n  return fetch(`http://localhost:8080/search`).then(function(resp){\r\n      console.log(name);\r\n      return resp.json();\r\n    })\r\n\r\n}\r\n\r\nasync function checkLogin(userpw){\r\n  console.log(userpw);//{username: , password: }\r\n  const info = await getLoginInfo(userpw);\r\n  console.log(info);//{status: , screenname: }\r\n  console.log(info.status);\r\n}\r\n\r\nfunction handleError(error) {\r\n  console.warn(error);\r\n  return null;\r\n}\r\n\r\nmodule.exports = {\r\n  createAccount: function (user_info) {\r\n    console.log(user_info);\r\n    return getRegisterInfo(user_info).catch(handleError);\r\n  },\r\n  getLogin: function (user_info) {\r\n    return getLoginInfo(user_info).catch(handleError);\r\n  },\r\n  getLoggedInfo: function(community_info){\r\n    return getCommunityLoggedInInfo(community_info).catch(handleError);\r\n  },\r\n  getScreenname: function (user_info) {\r\n    console.log(user_info);\r\n    return getRegisterInfo(user_info).catch(handleError);\r\n  },\r\n  getNotLogged: function(community_info){\r\n    return getCommunityNotLoggedInfo(community_info).catch(handleError);\r\n  }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"script"}